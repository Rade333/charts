# Main domain of the cluster.
clusterDomain: "silta.wdr.io"

# https://github.com/helm/charts/blob/master/stable/traefik/values.yaml
traefik:
  externalTrafficPolicy: Local
  rbac:
    enabled: true
  ssl:
    enabled: true
    enforced: false
  dashboard:
    enabled: false
    serviceType: "NodePort"
    #auth:
    #  basic: 
    #    # htpasswd -nb someuser somepass
    #    someuser: htpass_hash
ssl:
  enabled: true
  email: admin@example.com
  # Available issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
  issuer: letsencrypt
  # Used when certificate type is custom
  # ca: ""
  # key: ""
  # crt: ""
  
# https://github.com/wunderio/charts/blob/master/csi-rclone/values.yaml
csi-rclone:
  enabled: false
  # Use silta cluster gke credentials. This is used when remote type is set to "google cloud storage".
  useGkeAuth: false
  # Do not allow csi-rclone subchart to install default secret because we want to generate it ourselves.
  defaultParams: false
  storageClass:
    name: "silta-shared"
  params:
    remote: "s3"
    remotePath: "projectname"
    
    # Minio as S3 provider
    s3-provider: "Minio"
    s3-endpoint: "http://minio-release.default:9000"
    # Default credentials of minio chart https://github.com/helm/charts/tree/master/stable/minio
    s3-access-key-id: "AKIAIOSFODNN7EXAMPLE"
    s3-secret-access-key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

minio:
  enabled: false

# Splash page.
splash:
  resources:
    requests:
      cpu: 10m
      memory: 10M


# SSH Jumphost settings
gitAuth:
  host: 'github.com'
  organisation: ''
  apiToken: ''
  allowedIps: []
  # Kubernetes resource allocation.
  resources: {}

# Deployment remover
deploymentRemover:
  enabled: true
  # Github webhooks secret
  webhooksSecret: ''
  # Kubernetes resource allocation.
  resources: {}
  ssl:
    enabled: true
    email: admin@example.com
    # Available issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
    issuer: letsencrypt
    # Used when certificate type is custom
    # ca: ""
    # key: ""
    # crt: ""

# GKE Cluster settings
gke:
  keyJSON: ''
  projectName: '' 
  computeZone: ''
  clusterName: ''

# Redis DB for remover queue
# https://github.com/helm/charts/tree/master/stable/redis
redis:
  password: ''
  cluster:
    enabled: 0
    slaveCount: 0

# Filebeat settings
filebeat:
  enabled: false
  version: ''
  elasticCloudId: ''
  elasticsearchHost: ''
  elasticsearchPort: ''
  elasticsearchUsername: ''
  elasticsearchPassword: ''
  elasticsearchCloudAuth: ''

# Metricbeat settings
metricbeat:
  enabled: false
  version: ''
  elasticCloudId: ''
  elasticsearchHost: ''
  elasticsearchPort: ''
  elasticsearchUsername: ''
  elasticsearchPassword: ''
  elasticsearchCloudAuth: ''

kube-state-metrics:
  enabled: false

# Newrelic monitoring
# https://github.com/helm/charts/tree/master/stable/newrelic-infrastructure
newrelic-infrastructure:
  enabled: false
  licenseKey: ""
  cluster: "silta"
  # kube-state-metrics are set up at "{{ .Release.Name }}-kube-state-metrics:8080"
  kubeStateMetricsUrl: silta-cluster-kube-state-metrics:8080

cert-manager:
  enabled: true
  email: ''

